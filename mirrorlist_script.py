import pandas as pd
import requests
from bs4 import BeautifulSoup
import re
import os
import subprocess

try:
    url = 'https://archlinux.org/mirrors/status/'
    r = requests.get(url).text
    soup = BeautifulSoup(r, 'html.parser')
    table_html = soup.find('table', id='successful_mirrors')
    tbody = table_html.find('tbody')

    hd = ['Mirror URL', 'Protocol', 'Country', 'Completion %', 'μ Delay (hh:mm)', 'μ Duration (s)', 'σ Duration (s)', 'Mirror Score', 'NuLL']
    tr = tbody.find_all('tr')
    data = []

    for row in tr:
        text = row.get_text(strip=True, separator=",").split(",")
        data.append(text)

    df = pd.DataFrame(data, columns=hd)
    df = df.drop(df.columns[[8]], axis=1)

    def remove_numeric_countries(df):
        def is_country_valid(country):
            return not bool(re.search(r'\d', str(country)))
        df_filtered = df[df['Country'].apply(is_country_valid)]
        return df_filtered

    cleaned_df = remove_numeric_countries(df)
    final_data = cleaned_df.drop(['Country', 'μ Delay (hh:mm)', 'μ Duration (s)', 'σ Duration (s)'], axis=1)
    final_data["Mirror Score"] = pd.to_numeric(final_data["Mirror Score"])

    gk = final_data.groupby('Protocol')
    gk = gk.get_group('https')

    prefix = "Server = "
    suffix = "$repo/os/$arch"

    modified_urls = gk['Mirror URL'].head(10).apply(lambda x: f"{prefix}{x}{suffix}")

    save_path = input("Enter the path to save the file: ")

    mirrorlist_path = os.path.join(save_path, "mirrorlist")
    mirrorlist_old_path = os.path.join(save_path, "mirrorlist_old")

    if os.path.exists(mirrorlist_path):
        print(f"{mirrorlist_path} already exists. Renaming to {mirrorlist_old_path}")
        rename_command = ["sudo", "mv", mirrorlist_path, mirrorlist_old_path]
        subprocess.run(rename_command)

    header_content = """################################################################################
############## Arch Linux mirrorlist generated by Abhishek Mishra ##############
################################################################################

"""

    temp_file_path = "/tmp/mirrorlist_temp.csv"
    with open(temp_file_path, "w") as temp_file:
        temp_file.write(header_content)

    modified_urls_path = "/tmp/modified_urls_temp.csv"
    modified_urls.to_csv(modified_urls_path, index=False, header=None)

    with open(temp_file_path, "a") as temp_file:
        with open(modified_urls_path, "r") as modified_urls_file:
            temp_file.write(modified_urls_file.read())

    sudo_command = ["sudo", "mv", temp_file_path, mirrorlist_path]
    subprocess.run(sudo_command)

    print("Successfully saved modified URLs to mirrorlist")

except Exception as e:
    print(f"An error occurred: {e}")
